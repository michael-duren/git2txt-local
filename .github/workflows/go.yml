# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Go
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Build
      run: go build -v ./...
    #TODO: add after test cases are complete
    #- name: Test
      #run: go test -v ./...

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binaries
      run: |
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o dist/app-linux-amd64 -v ./...
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -o dist/app-linux-arm64 -v ./...
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o dist/app-darwin-amd64 -v ./...
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o dist/app-darwin-arm64 -v ./...
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o dist/app-windows-amd64.exe -v ./...
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
